[{"/Users/duc0032/code/clue/src/index.js":"1","/Users/duc0032/code/clue/src/redux/actions.js":"2","/Users/duc0032/code/clue/src/components/App.js":"3","/Users/duc0032/code/clue/src/redux/store.js":"4","/Users/duc0032/code/clue/src/utils.js":"5","/Users/duc0032/code/clue/src/components/Header.js":"6","/Users/duc0032/code/clue/src/components/Rooms.js":"7","/Users/duc0032/code/clue/src/redux/reducers.js":"8","/Users/duc0032/code/clue/src/selectors/selectors.js":"9","/Users/duc0032/code/clue/src/components/Notify.js":"10","/Users/duc0032/code/clue/src/components/Room.js":"11","/Users/duc0032/code/clue/src/redux/mutators.js":"12","/Users/duc0032/code/clue/src/redux/utils/redux-map.js":"13","/Users/duc0032/code/clue/src/components/Player.js":"14"},{"size":1097,"mtime":1627139158141,"results":"15","hashOfConfig":"16"},{"size":2042,"mtime":1627138336434,"results":"17","hashOfConfig":"16"},{"size":213,"mtime":1627135184466,"results":"18","hashOfConfig":"16"},{"size":449,"mtime":1627135097987,"results":"19","hashOfConfig":"16"},{"size":966,"mtime":1627135097984,"results":"20","hashOfConfig":"16"},{"size":1365,"mtime":1627135321977,"results":"21","hashOfConfig":"16"},{"size":322,"mtime":1627135097980,"results":"22","hashOfConfig":"16"},{"size":3418,"mtime":1627139376104,"results":"23","hashOfConfig":"16"},{"size":3667,"mtime":1627138217861,"results":"24","hashOfConfig":"16"},{"size":324,"mtime":1627135097979,"results":"25","hashOfConfig":"16"},{"size":1009,"mtime":1627138107373,"results":"26","hashOfConfig":"16"},{"size":1482,"mtime":1627139158136,"results":"27","hashOfConfig":"16"},{"size":1051,"mtime":1627135097988,"results":"28","hashOfConfig":"16"},{"size":1183,"mtime":1627138336441,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"d1m7ih",{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"48"},"/Users/duc0032/code/clue/src/index.js",[],"/Users/duc0032/code/clue/src/redux/actions.js",[],"/Users/duc0032/code/clue/src/components/App.js",[],"/Users/duc0032/code/clue/src/redux/store.js",[],"/Users/duc0032/code/clue/src/utils.js",[],"/Users/duc0032/code/clue/src/components/Header.js",[],"/Users/duc0032/code/clue/src/components/Rooms.js",[],"/Users/duc0032/code/clue/src/redux/reducers.js",["60","61"],"/Users/duc0032/code/clue/src/selectors/selectors.js",[],["62","63"],"/Users/duc0032/code/clue/src/components/Notify.js",[],"/Users/duc0032/code/clue/src/components/Room.js",[],"/Users/duc0032/code/clue/src/redux/mutators.js",[],"/Users/duc0032/code/clue/src/redux/utils/redux-map.js",[],"/Users/duc0032/code/clue/src/components/Player.js",["64"],"import React from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  isCurrentTurnPlayer, isImposter,\n} from \"../selectors/selectors\"\nimport {\n} from \"../redux/actions\";\n\nconst getPlayerClassName = (isImposter, isCurrentTurn, celebrate) => {\n  if (isImposter && celebrate) {\n    return \"playerEjected\"\n  } else if (isCurrentTurn || celebrate) {\n    return \"turnHighlight\"\n  } else {\n    return \"\"\n  }\n}\n\nconst Player = ({\n  celebrate,\n  player,\n  isCurrentTurn,\n}) => (\n    <div className={`player ${getPlayerClassName(isImposter, isCurrentTurn, celebrate)}`}>\n      <div>\n        <div className=\"imageContainer\">\n          <img src={`character-images/${player.image}.png`}/>\n        </div>\n        <div className=\"playerContent\">\n          <span className=\"playerName\">{player.name}</span>\n          <span className=\"status\">\n            {\n              isCurrentTurn ? \"'s turn!\" : \"\"\n            }\n          </span>\n        </div>\n      </div>\n    </div>\n);\n\nconst mapStateToProps = (state, ownProps) => ({\n  ...ownProps,\n  celebrate: state.gameOver,\n  isCurrentTurn: isCurrentTurnPlayer(state, ownProps.player),\n})\n\nexport default connect(mapStateToProps, {\n\n})(Player);\n",{"ruleId":"65","severity":1,"message":"66","line":1,"column":13,"nodeType":"67","messageId":"68","endLine":1,"endColumn":20},{"ruleId":"65","severity":1,"message":"69","line":3,"column":28,"nodeType":"67","messageId":"68","endLine":3,"endColumn":38},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","severity":1,"message":"75","line":33,"column":11,"nodeType":"76","endLine":33,"endColumn":62},"no-unused-vars","'actions' is defined but never used.","Identifier","unusedVar","'ArrayUtils' is defined but never used.","no-native-reassign",["77"],"no-negated-in-lhs",["78"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]